{"version":3,"sources":["serviceWorker.js","styles/color.js","Components/Footer.js","utils/data.js","Components/Modal.js","Components/Container.js","index.js","assets/Welcome_Screen.png","assets/Login_Screen.png"],"names":["Boolean","window","location","hostname","match","color","FooterContainer","styled","footer","_templateObject","Text","p","_templateObject2","TextContainer","div","_templateObject3","Link","a","_templateObject4","Footer","react_default","createElement","title","link","map","item","index","key","href","links","images","src","WelcomeScreen","alt","LoginScreen","projectLinks","name","type","Main","Modal_templateObject","ImageContainer","Modal_templateObject2","Image","Modal_templateObject3","Modal","console","log","BackgroundContainer","Container_templateObject","TopNaviagtion","Container_templateObject2","Container_templateObject3","TextContainerLeft","Container_templateObject4","TextContainerRight","_templateObject5","_templateObject6","_templateObject7","ProjectLink","_templateObject8","ProjectSpan","span","_templateObject9","PortfolioContainer","_useState","useState","_useState2","Object","slicedToArray","isClicked","displayModal","Container_Link","Container_Text","Container_TextContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.3d69af19.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n\t'white': '#FFFFFF',\n\t'black': '#000000',\n\t'verdant': '#579170',\n\t'default': '#333333',\n\t'lightGrey': '#cdd2d8'\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport color from '../styles/color';\n\nconst FooterContainer = styled.footer`\n\tposition: absolute;\n\tbottom: 0;\n\twidth: 100%;\n\tdisplay: flex;\n\tbackground-color: ${color.white};\n`\nconst Text = styled.p`\n\tmargin-block-start: 0;\n    margin-block-end: 0;\n\tcolor: ${color.default};\n`\nconst TextContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex: 1;\n\tjustify-content: flex-start;\n`\nconst Link = styled.a`\n\tpadding: 16px;\n    text-decoration: none;\n`\n\nexport default function Footer () {\n\tconst links = [{ title: 'github', link: 'https://github.com/Geccles' },\n\t{ title: 'linkedin', link: 'https://www.linkedin.com/in/galinaeccles/' },\n\t{ title: 'contact', link: 'https://www.linkedin.com/in/galinaeccles/'}]\n\treturn (\n\t\t<FooterContainer>\n\t\t\t<TextContainer>\n\t\t\t\t{\n\t\t\t\t\tlinks.map(function (item, index){\n\t\t\t\t\t\treturn <Link key={index} href={item.link}><Text>{item.title}</Text></Link>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</TextContainer>\n\t\t</FooterContainer>\n\t)\n}\n","import WelcomeScreen from '../assets/Welcome_Screen.png';\nimport LoginScreen from '../assets/Login_Screen.png';\n\nexport const links = [{ title: 'portfolio', link: '#' },\n\t{ title: 'about', link: 'https://www.linkedin.com/in/galinaeccles/' }]\n\nexport const images = [{ src: WelcomeScreen, alt: 'Welcome Screen' },\n\t{ src: LoginScreen, alt: 'Login Screen' },\n\t{src: WelcomeScreen, alt: 'Home Screen'},\n\t{src: LoginScreen, alt: 'Other Screen'}]\n\nexport const projectLinks = [{ name: 'Beer App Wireframes', link: 'https://www.figma.com/file/ZCkZ6GYMHnaB5prjiTNJXcBe/Beer-App?node-id=0%3A1', type: 'Figma Designs' },\n\t{ name: 'First Website', link: 'http://verdantshades.com/', type: 'HTML, CSS, JS, JQuery' },\n\t{ name: 'Objective Talent New Design', link: 'https://www.figma.com/file/GurwtFqG5A7pczbQu0WHVkcC/ObjectiveTalent-Redesign', type: 'Figma Designs'},\n\t{ name: 'Let\\'s Collaborate', link: 'https://github.com/Geccles', type: 'This could be us'}]\n\nexport default {images, links, projectLinks}\n","import React from 'react';\nimport styled from 'styled-components';\nimport color from '../styles/color';\nimport Footer from './Footer';\nimport { images } from '../utils/data'\n\nconst Main = styled.div`\n    text-align: center;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n`\nconst ImageContainer = styled.div`\n    vertical-align: middle;\n    display: inline-block;\n    width: 50%;\n    white-space: nowrap;\n    overflow-x: auto;\n    overflow-y: hidden;\n`\nconst Image = styled.div`\n    height: 100px;\n    width: 100px;\n    font-size: 25px;\n    background: blue;\n    margin: 10px;\n    display: inline-block;\n    line-height: 100px; \n`\n\nexport default function Modal () {\n\treturn (\n        <Main>\n            <ImageContainer>\n                {\n                    images.map(function (item, index) {\n                        console.log(item)\n                        return <Image src={item.src} />\n                    })\n                }\n            </ImageContainer>\n        </Main>\n\t)\n}\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport color from '../styles/color';\nimport Footer from './Footer';\nimport { links, projectLinks } from '../utils/data';\nimport Modal from './Modal';\n\nconst BackgroundContainer = styled.div`\n\ttop: 0;\n\twidth: 100%;\n\theight: 100vh;\n\tbackground: ${color.white};\n\toverflow: visible;\n\t@media (max-width: 900px) {\n\t\theight: 100%;\n\t}\n`\nconst TopNaviagtion = styled.div`\n\tdisplay: flex;\n\tpadding: 8px;\n\tz-index: 2;\n\tmargin-bottom: 24px;\n`\nconst Text = styled.p`\n\tmargin-block-start: 0;\n    margin-block-end: 0;\n\tcolor: ${color.default};\n`\nconst TextContainerLeft = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: flex-start;\n`\nconst TextContainerRight = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: flex-end;\n`\nconst Link = styled.a`\n\tpadding: 16px;\n    text-decoration: none;\n`\nconst TextContainer = styled.div`\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\tz-index: 9;\n\tdisplay: block;\n\twidth: 100%;\n\theight: 40px;\n\tmargin-right: auto;\n\tmargin-left: auto;\n\t-webkit-transform: translate(-50%, -50%);\n\t-ms-transform: translate(-50%, -50%);\n\ttransform: translate(-50%, -50%);\n\t@media (max-width: 900px) {\n\t\tposition: relative;\n\t}\n`\nconst ProjectLink = styled.a`\n\tposition: static;\n\tleft: 0%;\n\ttop: 0%;\n\tz-index: 1;\n\twidth: 25%;\n\tpadding-right: 0px;\n\tfloat: left;\n\tclear: none;\n\tfont-family: Circularpro, sans-serif;\n\tcolor: ${color.default};\n\tfont-size: 30px;\n\tline-height: 5vmin;\n\tfont-weight: 500;\n\ttext-align: center;\n\ttext-decoration: none;\n\t@media (max-width: 900px) {\n\t\twidth: 100%\n\t\tpadding: 40px 0px;\n\t}\n`\nconst ProjectSpan = styled.span`\n\tposition: static;\n\tleft: 50%;\n\ttop: 39%;\n\tdisplay: block;\n\tmargin-right: auto;\n\tmargin-left: auto;\n\tfont-family: 'Circularpro book', sans-serif;\n\tcolor: ${color.default};\n\tfont-size: 10px;\n\tline-height: 20px;\n\tfont-weight: 400;\n\tletter-spacing: 2px;\n\ttext-transform: uppercase;\n`\n\nexport default function PortfolioContainer () {\n\tconst [isClicked, setClicked] = useState(false);\n\n\tconst onClick = () => {\n\t\tsetClicked(true)\n\t}\n\tconst displayModal = isClicked ? <Modal /> : null\n\n\t//href=\"#\" onClick={onClick}\n\treturn (\n\t\t<BackgroundContainer>\n\t\t\t<TopNaviagtion>\n\t\t\t\t<TextContainerLeft>\n\t\t\t\t\t<Link><Text>Galina Maria Nosti</Text></Link>\n\t\t\t\t</TextContainerLeft>\n\t\t\t\t<TextContainerRight>\n\t\t\t\t\t{\n\t\t\t\t\t\tlinks.map(function (item, index){\n\t\t\t\t\t\t\treturn <Link key={index} href={item.link}><Text>{item.title}</Text></Link>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</TextContainerRight>\n\t\t\t</TopNaviagtion>\n\t\t\t{displayModal}\n\t\t\t<TextContainer>\n\t\t\t\t\t{\n\t\t\t\t\t\tprojectLinks.map(function (item, index){\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ProjectLink key={index} href={item.link}>\n\t\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t<ProjectSpan>\n\t\t\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t\t\t\t{item.type}\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t</ProjectSpan>\n\t\t\t\t\t\t\t\t</ProjectLink>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</TextContainer>\n\t\t\t<Footer />\n\t\t</BackgroundContainer>\n\t)\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Container from './Components/Container';\n\nconst App = (links, images) => {\n  return (\n\t\t<Container images={images} links={links} />\n  )\n}\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Welcome_Screen.6092c95b.png\";","module.exports = __webpack_public_path__ + \"static/media/Login_Screen.f02813cf.png\";"],"sourceRoot":""}